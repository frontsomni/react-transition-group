{"version":3,"sources":["router/index.tsx","views/TransitionPage.tsx","views/CSSTransitonPage.tsx","views/TransitionGroupPage.tsx","views/SwitchTransitionPage.tsx","views/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["router","path","exact","component","useState","inStatus","setInStatus","ulRef","useRef","unMountState","setUnMountState","className","Transition","appear","in","timeout","nodeRef","unmountOnExit","state","ref","onClick","toString","Date","getTime","list","setList","addItem","map","item","index","CSSTransition","classNames","length","prev","tmp","splice","removeItem","TransitionGroup","childFactory","child","console","log","enter","exit","setState","mode","setMode","onChangeInput","ev","value","target","type","name","id","checked","onChange","htmlFor","SwitchTransition","href","App","pathname","useLocation","match","includes","sourcePath","substr","replace","x","toUpperCase","rel","route","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10906fe6.chunk.js","sourcesContent":["import CSSTransitonPage from \"../views/CSSTransitonPage\"\nimport Home from \"../views/Home\"\nimport SwitchTransitionPage from \"../views/SwitchTransitionPage\"\nimport TransitionGroupPage from \"../views/TransitionGroupPage\"\nimport TransitionPage from \"../views/TransitionPage\"\n\nconst router = [{\n  path: '/transition',\n  exact: true,\n  component: TransitionPage\n}, {\n  path: '/csstransiton',\n  exact: true,\n  component: CSSTransitonPage\n}, {\n  path: '/transitongroup',\n  exact: true,\n  component: TransitionGroupPage\n}, {\n  path: '/switchtransition',\n  exact: true,\n  component: SwitchTransitionPage\n}, {\n  path: '',\n  component: Home\n}]\n\nexport default router","import {Transition} from 'react-transition-group'\nimport { useRef, useState } from \"react\"\n\nexport default function TransitionPage() {\n  const [inStatus, setInStatus] = useState(true)\n  // fix: findDOMNode is deprecated in StrictMode.\n  const ulRef = useRef(null)\n  const [unMountState, setUnMountState] = useState(false)\n  return (\n    <div className=\"container\">\n      <h3 className=\"text-center\">Transition</h3>\n      <Transition\n        appear={true}\n        in={inStatus}\n        timeout={0} // 过渡状态立即到达过渡结束状态\n        nodeRef={ulRef}\n        unmountOnExit={unMountState} // 过渡完成后，卸载组件\n      >\n        {\n          (state) => (\n            <ul\n              className={`list-group mt-3 transition-${state}`}\n              ref={ulRef}\n            >\n              {/* page-fade 与 state 状态组件控制过渡 */}\n              <li className={`list-group-item`}>状态：{inStatus ? '显示' : '隐藏'}</li>\n              <li className={`list-group-item`}>状态：{inStatus ? '显示' : '隐藏'}</li>\n              <li className={`list-group-item`}>状态：{inStatus ? '显示' : '隐藏'}</li>\n              <li className={`list-group-item`}>状态：{inStatus ? '显示' : '隐藏'}</li>\n              <li className={`list-group-item`}>状态：{inStatus ? '显示' : '隐藏'}</li>\n              <li className={`list-group-item`}>状态：{inStatus ? '显示' : '隐藏'}</li>\n              <li className={`list-group-item`}>状态：{inStatus ? '显示' : '隐藏'}</li>\n            </ul>\n          )\n        }\n      </Transition>\n      <div className=\"text-center mt-3\">\n        <button className=\"btn btn-primary\"\n          onClick={() => setInStatus(!inStatus)}\n        >{inStatus ? '隐藏' : '显示'}列表</button>\n        <button className=\"btn btn-primary ml-3\" onClick={() => setUnMountState(!unMountState)}>unmountOnExit 状态：{unMountState.toString()}</button>\n      </div>\n    </div>\n  )\n}","import { useState } from 'react'\nimport {CSSTransition} from 'react-transition-group'\nimport './common.css'\n\nexport default function CSSTransitonPage() {\n  const [list, setList] = useState(() => [\n    (new Date()).getTime(),\n    (new Date()).getTime() + 1,\n    (new Date()).getTime() + 2\n  ])\n  const addItem = () => {\n    setList([...list, (new Date()).getTime()])\n  }\n  // 移除时没有过渡效果\n  const removeItem = (index: number) => {\n    setList(prev => {\n      const tmp = [...prev]\n      tmp.splice(index, 1)\n      return tmp\n    })\n  }\n  return (\n    <>\n      <div className=\"container\">\n        <h3 className=\"text-center\">CSSTransitonPage</h3>\n        <ul className=\"list-group\">\n          {\n            list.map((item, index) => (\n              <CSSTransition\n              key={item}\n                in\n                classNames=\"csstransition-fade\" // classNames 控制过渡\n                timeout={10}\n                appear // 初始化过渡\n              >\n                <li\n                  className=\"list-group-item d-flex align-items-center justify-content-between\"\n                >\n                  {index + 1} - {item}\n                  <div>\n                    {\n                      list.length > 1\n                      && <button className=\"btn btn-primary mr-3\"\n                          onClick={() => removeItem(index)}\n                        >移除</button>\n                    }\n                    <button className=\"btn btn-primary\"\n                      onClick={addItem}\n                    >增加</button>\n                  </div>\n                </li>\n            </CSSTransition>\n            ))\n          }\n        </ul>\n      </div>\n    </>\n  )\n}","import { useState } from 'react'\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\nimport './common.css'\n\nexport default function TransitionGroupPage() {\n  const [list, setList] = useState([\n    new Date().getTime(),\n    new Date().getTime() + 1,\n    new Date().getTime() + 2\n  ])\n  const addItem = () => {\n    setList([...list, (new Date()).getTime()])\n  }\n  const removeItem = (index: number) => {\n    setList(prev => {\n      const tmp = [...prev]\n      tmp.splice(index, 1)\n      return tmp\n    })\n  }\n  return (\n    <>\n      <h3 className=\"text-center\">TransitionGroupPage</h3>\n      <ul className=\"list-group\">\n        <TransitionGroup\n          component={null} // 特定的结构，component 值设置为 null，不影响原有的结构\n          childFactory={child => {\n            console.log(child) // 查看渲染过程中每个子元素的详细信息：props、key 等，进行拦截处理\n            return child\n          }}\n        >\n          {\n            list.map((item, index) => (\n              // CSSTransition 包装了元素\n              <CSSTransition\n                appear\n                timeout={{\n                  appear: 410,\n                  enter: 410,\n                  exit: 300\n                }}\n                key={item}\n                classNames=\"transition-group-fade\"\n              >\n                <li\n                  className=\"list-group-item d-flex align-items-center justify-content-between\"\n                  >\n                    {index + 1} - {item}\n                    <div>\n                      {\n                        list.length > 1\n                        && <button className=\"btn btn-primary mr-3\"\n                            onClick={() => removeItem(index)}\n                          >移除</button>\n                      }\n                      <button className=\"btn btn-primary\"\n                        onClick={addItem}\n                      >增加</button>\n                    </div>\n                  </li>\n              </CSSTransition>\n            ))\n          }\n\n        </TransitionGroup>\n      </ul>\n    </>\n  )\n}","import './common.css'\nimport {CSSTransition, SwitchTransition} from 'react-transition-group'\nimport { ChangeEvent, useState } from 'react'\n\ntype TMode = 'out-in' | 'in-out'\n\nexport default function SwitchTransitonPage() {\n  const [state, setState] = useState(false)\n  const [mode, setMode] = useState<TMode>('out-in')\n\n  const onChangeInput = (ev: ChangeEvent<HTMLInputElement>) => {\n    let value = ev.target.value as TMode\n    setMode(value)\n  }\n\n  return (\n    <>\n      <h3 className=\"text-center\">SwitchTransiton</h3>\n      <div className=\"d-flex justify-content-center mb-5\">\n        <div className=\"form-check\">\n          <input className=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios1\" value=\"out-in\"\n            checked={mode === 'out-in'}\n            onChange={onChangeInput}\n          />\n          <label className=\"form-check-label\" htmlFor=\"exampleRadios1\">\n            Mode: out-in\n          </label>\n        </div>\n        <div className=\"form-check ml-3\">\n          <input className=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"in-out\"\n            checked={mode === 'in-out'}\n            onChange={onChangeInput}\n          />\n          <label className=\"form-check-label\" htmlFor=\"exampleRadios2\">\n            Mode: in-out\n          </label>\n        </div>\n      </div>\n      <SwitchTransition\n        mode={mode} // 内置的过渡模式\n      >\n        {/* 使用 CSSTransition 包装要过渡的元素 */}\n        <CSSTransition\n          key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\n          timeout={500}\n          classNames='switchtransiton-fade'\n        >\n          <div className=\"text-center\">\n            <button onClick={() => setState(!state)}\n              className=\"btn btn-primary\"\n            >\n              {state ? \"Goodbye, world!\" : \"Hello, world!\"}\n            </button>\n            </div>\n        </CSSTransition>\n    </SwitchTransition>\n    </>\n  )\n}","export default function Home() {\n  return (\n    <div className=\"home container text-center mt-3\">\n      <a className=\"btn btn-primary\" href=\"https://yuelau.github.io/react-transition-group/#/\">传送门</a>\n    </div>\n  )\n}","import './App.css'\nimport { Route, Switch, useLocation } from 'react-router-dom'\nimport router from './router'\n\nfunction App() {\n  let {pathname} = useLocation()\n  const match = ['/transition', '/csstransiton', '/transitongroup', '/switchtransition'].includes(pathname)\n  let sourcePath = pathname.substr(1).replace(/^[\\w\\d]{1}/, x => x.toUpperCase()) + 'Page'\n  return (\n    <div className=\"app px-3 py-3 container\">\n      {\n        match && (\n          <div className=\"text-right\">\n            <a className=\"btn btn-primary\" rel=\"noreferrer\" target=\"_blank\" href={`https://yuelau.github.io/readme-react-go/#/codeview?origin=${sourcePath}`}>查看源码</a>\n          </div>\n        )\n      }\n      <Switch>\n        {\n          router.map((route, index) => (\n            <Route\n              key={index}\n              path={route.path}\n              exact={route.exact}\n              component={route.component}\n            />\n          ))\n        }\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {HashRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}