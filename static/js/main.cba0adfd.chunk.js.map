{"version":3,"sources":["views/Home.tsx","views/TransitionPage.tsx","views/CSSTransitonPage.tsx","views/TransitionGroupPage.tsx","views/SwitchTransitonPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","className","to","TransitionPage","useState","inStatus","setInStatus","onClick","Transition","in","timeout","unmountOnExit","state","CSSTransitonPage","Date","getTime","list","setList","setinStatus","addItem","CSSTransition","appear","classNames","map","item","index","length","prev","tmp","splice","removeItem","TransitionGroupPage","TransitionGroup","component","SwitchTransitonPage","setState","SwitchTransition","mode","addEndListener","node","done","addEventListener","App","path","TransitonPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cba0adfd.chunk.js","sourcesContent":["import { NavLink} from 'react-router-dom'\n\nexport default function Home() {\n  return (\n    <>\n      <h3 className=\"text-center mt-5 mb-3\">React Transitoin Group</h3>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item disabled\">Components</li>\n          <li className=\"list-group-item\">\n            <NavLink to=\"transition\">Transitoin Component</NavLink>\n          </li>\n          <li className=\"list-group-item\">\n            <NavLink to=\"csstransiton\">CSSTransiton Component</NavLink>\n          </li>\n          <li className=\"list-group-item\">\n            <NavLink to=\"transitongroup\">TransitionGroup Component</NavLink>\n          </li>\n          <li className=\"list-group-item\">\n            <NavLink to=\"switchtransition\">SwitchTransition Component</NavLink>\n          </li>\n      </ul>\n    </>\n  )\n}","import {Transition} from 'react-transition-group'\nimport { useState } from \"react\"\n\nexport default function TransitionPage() {\n  const [inStatus, setInStatus] = useState(false)\n  return (\n    <>\n      <h3 className=\"text-center\">Transiton</h3>\n      <button className=\"btn btn-primary\"\n        onClick={() => setInStatus(!inStatus)}\n      >文本展示</button>\n      <Transition\n        in={inStatus}\n        timeout={400}\n        unmountOnExit\n      >\n        {\n          (state: any) => (<p className={`fade fade-${state}`}>状态：{inStatus ? '显示' : '隐藏'}</p>)\n        }\n      </Transition>\n    </>\n  )\n}","import { useState } from 'react'\nimport {CSSTransition} from 'react-transition-group'\nimport './common.css'\n\nexport default function CSSTransitonPage() {\n  const [list, setList] = useState(() => [(new Date()).getTime()])\n  const [inStatus ,setinStatus] = useState(false)\n  const addItem = () => {\n    setList([...list, (new Date()).getTime()])\n  }\n  const removeItem = (index: number) => {\n    setList(prev => {\n      const tmp = [...prev]\n      tmp.splice(index, 1)\n      return tmp\n    })\n  }\n  return (\n    <>\n      <div className=\"container\">\n        <h3 className=\"text-center\">CSSTransitonPage</h3>\n        <button className=\"btn btn-primary mb-3\" onClick={() => setinStatus(!inStatus)}>文本展示</button>\n        <CSSTransition\n          in={inStatus}\n          appear\n          timeout={1000}\n          unmountOnExit\n          classNames=\"fade\"\n        >\n          <p>状态： {inStatus ? '显示' : '隐藏'} </p>\n        </CSSTransition>\n        <ul className=\"list-group\">\n          {\n            list.map((item, index) => (\n              <CSSTransition\n              in\n              classNames=\"fade\"\n              timeout={1000}\n              key={item}\n              appear\n            >\n              <li\n              className=\"list-group-item d-flex align-items-center justify-content-between\"\n              >\n                {index + 1} - {item}\n                <div>\n                  {\n                    list.length > 1\n                    && <button className=\"btn btn-primary mr-3\"\n                        onClick={() => removeItem(index)}\n                      >移除</button>\n                  }\n                  <button className=\"btn btn-primary\"\n                    onClick={addItem}\n                  >增加</button>\n                </div>\n              </li>\n              </CSSTransition>\n            ))\n          }\n        </ul>\n      </div>\n    </>\n  )\n}","import { useState } from 'react'\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\nimport './common.css'\n\nexport default function TransitionGroupPage() {\n  const [list, setList] = useState([new Date().getTime()])\n  const addItem = () => {\n    setList([...list, (new Date()).getTime()])\n  }\n  const removeItem = (index: number) => {\n    setList(prev => {\n      const tmp = [...prev]\n      tmp.splice(index, 1)\n      return tmp\n    })\n  }\n  return (\n    <>\n      <h3 className=\"text-center\">TransitionGroupPage</h3>\n      <ul className=\"list-group\">\n        <TransitionGroup\n          component={null}\n        >\n          {\n            list.map((item, index) => (\n              <CSSTransition\n                timeout={1000}\n                key={item}\n                classNames=\"fade\"\n              >\n                <li\n                  className=\"list-group-item d-flex align-items-center justify-content-between\"\n                  >\n                    {index + 1} - {item}\n                    <div>\n                      {\n                        list.length > 1\n                        && <button className=\"btn btn-primary mr-3\"\n                            onClick={() => removeItem(index)}\n                          >移除</button>\n                      }\n                      <button className=\"btn btn-primary\"\n                        onClick={addItem}\n                      >增加</button>\n                    </div>\n                  </li>\n              </CSSTransition>\n            ))\n          }\n\n        </TransitionGroup>\n      </ul>\n    </>\n  )\n}","import './common.css'\nimport {CSSTransition, SwitchTransition} from 'react-transition-group'\nimport { useState } from 'react'\nexport default function SwitchTransitonPage() {\n  const [state, setState] = useState(false)\n  return (\n    <>\n      <h3 className=\"text-center\">SwitchTransiton</h3>\n      <SwitchTransition\n        mode=\"out-in\"\n      >\n      <CSSTransition\n        key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\n        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n        classNames='fade'\n      >\n        <button onClick={() => setState(state => !state)}\n          className=\"btn btn-primary\"\n        >\n          {state ? \"Goodbye, world!\" : \"Hello, world!\"}\n        </button>\n      </CSSTransition>\n    </SwitchTransition>\n    </>\n  )\n}","import './App.css'\nimport { Route, Switch } from 'react-router-dom'\nimport Home from './views/Home'\nimport TransitonPage from './views/TransitionPage'\nimport CSSTransitonPage from './views/CSSTransitonPage'\nimport TransitionGroupPage from './views/TransitionGroupPage'\nimport SwitchTransitonPage from './views/SwitchTransitonPage'\n\nfunction App() {\n  return (\n    <div className=\"app pl-3 pr-3\">\n      <Switch>\n        <Route path=\"/transition\" component={TransitonPage}/>\n        <Route path=\"/csstransiton\" component={CSSTransitonPage}/>\n        <Route path=\"/transitongroup\" component={TransitionGroupPage}/>\n        <Route path=\"/switchtransition\" component={SwitchTransitonPage}/>\n        <Route component={Home}/>\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {HashRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}